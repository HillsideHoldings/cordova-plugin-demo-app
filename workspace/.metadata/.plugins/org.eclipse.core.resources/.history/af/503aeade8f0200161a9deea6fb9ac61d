package org.apache.cordova.media;

import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.media.AudioManager;

public class LockScreenMediaControl {

	/**
	 * Initializes the remote control client
	 */
	private void setupMediaSession() {
		/* Activate Audio Manager */
		mAudioManager = (AudioManager) getSystemService(Context.AUDIO_SERVICE);
		mAudioManager.requestAudioFocus(mAudioFocusListener,
				AudioManager.STREAM_MUSIC, AudioManager.AUDIOFOCUS_GAIN);

		ComponentName mRemoteControlResponder = new ComponentName(
				getPackageName(), MediaButtonReceiver.class.getName());
		final Intent mediaButtonIntent = new Intent(Intent.ACTION_MEDIA_BUTTON);
		mediaButtonIntent.setComponent(mRemoteControlResponder);
		mMediaSessionCompat = new MediaSessionCompat(getApplication(),
				"JairSession", mRemoteControlResponder, null);
		mMediaSessionCompat
				.setFlags(MediaSessionCompat.FLAG_HANDLES_MEDIA_BUTTONS
						| MediaSessionCompat.FLAG_HANDLES_TRANSPORT_CONTROLS);
		PlaybackStateCompat playbackStateCompat = new PlaybackStateCompat.Builder()
				.setActions(
						PlaybackStateCompat.ACTION_SEEK_TO
								| PlaybackStateCompat.ACTION_SKIP_TO_PREVIOUS
								| PlaybackStateCompat.ACTION_SKIP_TO_NEXT
								| PlaybackStateCompat.ACTION_PLAY
								| PlaybackStateCompat.ACTION_PAUSE
								| PlaybackStateCompat.ACTION_STOP)
				.setState(
						isPlaying() ? PlaybackStateCompat.STATE_PLAYING
								: PlaybackStateCompat.STATE_PAUSED,
						getCurrentPosition(), 1.0f).build();
		mMediaSessionCompat.setPlaybackState(playbackStateCompat);
		mMediaSessionCompat.setCallback(mMediaSessionCallback);
		mMediaSessionCompat.setSessionActivity(retrievePlaybackActions(5));
		mMediaSessionCompat.setActive(true);
		updateMediaSessionMetaData();
		mTransportController = mMediaSessionCompat.getController()
				.getTransportControls();
	}

	/**
	 * Updates the lockscreen controls, if enabled.
	 */
	private void updateMediaSessionMetaData() {
		MediaMetadataCompat.Builder builder = new MediaMetadataCompat.Builder();
		builder.putString(MediaMetadataCompat.METADATA_KEY_ARTIST,
				getArtistName());
		builder.putString(MediaMetadataCompat.METADATA_KEY_ALBUM,
				getAlbumName());
		builder.putString(MediaMetadataCompat.METADATA_KEY_TITLE,
				getTrackName());
		builder.putLong(MediaMetadataCompat.METADATA_KEY_DURATION,
				getDuration());
		builder.putBitmap(MediaMetadataCompat.METADATA_KEY_ALBUM_ART,
				MusicUtils.getArtwork(this, getAlbumID(), true));
		mMediaSessionCompat.setMetadata(builder.build());
	}

}
